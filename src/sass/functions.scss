/*
 * To replace characters in a string
 */
@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);
    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace +
        str-replace(str-slice($string, $index +
        str-length($search)), $search, $replace);
    }
    @return $string;
}

/*
 * To create an optimized svg url
 */
@function svg-url($svg) {
    /*
     * Chunk up string in order to avoid
     * "SystemStackError: stack level too deep"
    */
    $encoded: '';
    $slice: 2000;
    $index: 0;
    $loops: ceil(str-length($svg)/$slice);
    @for $i from 1 through $loops {
        $chunk: str-slice($svg, $index, $index + $slice - 1);
        $chunk: str-replace($chunk,'"','\'');
        $chunk: str-replace($chunk,'<','%3C');
        $chunk: str-replace($chunk,'>','%3E');
        $chunk: str-replace($chunk,'&','%26');
        $chunk: str-replace($chunk,'#','%23');
        $encoded: #{$encoded}#{$chunk};
        $index: $index + $slice;
    }
    @return url("data:image/svg+xml;charset=utf8,#{$encoded}");
}

/*
 * return svg url using specified color
 */
@function svg-icon($type, $color) {
    $svg: '';
    @if ($type == 'up') {
        $svg: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 10 14" width="10" height="14"><g><polygon fill="__COLOR__" points="7 5 7 13 3 13 3 5 0 5 5 0 10 5 7 5"/></g></svg>';
    } @else if ($type == 'down') {
        $svg: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 10 14" width="10" height="14"><g><polygon fill="__COLOR__" points="7 8 7 0 3 0 3 8 0 8 5 13 10 8 7 8"/></g></svg>';
    } @else if ($type == 'circle') {
        $svg: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 10 14" width="10" height="14"><g><circle fill="__COLOR__" cx="5" cy="7" r="4"/></g></svg>';
    }
    $svg: str-replace($svg, '__COLOR__', #{rgba($color, 1)});
    @return svg-url($svg);
}
